# Filename: ~/dfile/tsdflib2/README
#
# Author: Jenny Simpson
# Last update: 06/08/02 by Jenny Simpson

For current web-based documentation go to 
http://dante.sci.utah.edu/develop/simpson/scratch/documentation/tsdflib_doc.html

This directory contains the code and a test program for the library that
handles tsdfc files.

    * NAME
    * DESCRIPTION
    * CLASSES
    * EXAMPLES
    * DEPENDENCIES
    * CAVEATS
    * FILES
    * BUGS
    * SEE ALSO
    * AUTHORS
    * NOTES

NAME
TSDFLIB - Time Series Data File Library.

DESCRIPTION
TSDFLIB is a C++ library designed to allow reading and writing of graphicsio container files. It is intended to be used as an interface between the information stored in those files and applications such as Map3D, Matlab, and Viewdata. Currently, the container files are in a compact binary format that is not readable by the aforementioned applications. In order to allow the applications to access the information stored in the container files, this library provides a set of data structures that container files can be converted to before being read by the applications.

CLASSES

The overall data structure is basically a tree, where the root of the tree is a Container object. The Container object contains zero or more key/value pairs where the key is the name of a tsdf and the value is a list of paramenter sets (PSList). This key/value pair is stored as a struct called TS (Time Series). Each PSList in turn contains zero or more parameter sets (ParamSet). Theoretically these parameter lists and sets can contain any type of information related to a tsdf. Because there may be several different types of parameter sets and parameter lists, the PSList and ParamSet classes are virtual classes that are inherited by specific parameter sets. For example, a list of fiducial sets is stored as an FSList, which inherits the class PSList since it is a type of parameter list. A fiducial set is stored as a FidSet, which inherits ParamSet.

At each level in the tree and for each object, data is stored in two forms: an array and a hash. The intention is to allow developers to access information either by iterating through the arrays, or by accessing it directly via the hash if its unique string identifier is known.
Here is a diagram of the class stucture: <http://dante.sci.utah.edu/develop/simpson/scratch/documentation/tsdflib_small.jpg>
Container
Description

This object contains the same information as a tsdfc file. It takes a tsdfc file and parses its data into various underlying data structures which can then be passed to other applications. It stores the underlying data in two formats: an array and a hash of time series file name and their corresponding parameter lists. These pairs correspond to the key/value pairs found in the tsdfc files, which are in reality gdbm files. In this case, the key is the name of a tsdf file and the value is a parameter list (PSlist). Usually, the parameter list will consist of a list of parameter sets of type FidSet.
Methods

See container.h and container.cc.

PSList

Description

Virtual class that represents a generic list of parameter sets.
Methods

See pslist.h and pslist.cc

FSList

Description

This class contains a list of fidsets which is stored as both a hash and an array of fidsets. Individual fidsets are referenced in the hash by a unique id. One of these objects is stored for each time series in the tsdfc and is called more generally a parameter list. It inherits the PSList class.
Methods

See fslist.h and fslist.cc.
ParamSet
Description

Virtual class that represents a generic parameter set.
Methods

See paramset.h and paramset.cc.

FidSet

Description

This class handles one set of fiducials values, e.g., one set of activations times or recovery times. It is essentially designed to be an interface to Rob's class with only the member variables pertinent to a fidset. A fiducial set is an example of one type of parameter set that can be associated with a tsdf in a tsdfc file. Currently, it is the most common type of parameter set and the only one specifically implemented in this library.

The individual fiducials in the set are grouped by the lead that they correspond to.

A FidSet contains an array of hashes of all fiducials as well as a two-dimensional array of all fiducials indexed by lead number. These two data structures contain the same information but allow it to be accessed differently.
Methods

See fidset.h and fidset.cc
GDBMKeys
Description

Class that manages the keys within a Gnu DataBase Manager file. It knows nothing about internal contents of the file, just the basic structure of keys and associated block of data. It is meant to be able to read and write keys.
Methods

See gdbmkeys.h and gdbmkeys.cc.

GIOFidSet

Description

This data structure handles one set of fiducials values, e.g., one set of activations times or recovery times. It has methods to read fidsets from tsdfc files and eventually to write them too. This is the only place that really understands the structure of the fid sets within the gdbm (.tsdfc) file. This class was written by Rob Macleod and modified slightly by Jenny Simpson. Its original structure has been maintained in the interest of keeping all of the low level reading of a tsdfc file in one class.
Methods

See giofidset.h and giofidset.cc.

EXAMPLES
The best example of the usage of this library is the driver.cc file contained at ~simpson/dfile/demo/driver.cc

DEPENDENCIES
Dependent on several files in Rob Macleod's directory on the cvrti network. Basically, this library can only be run on the cvrti server.

CAVEATS

    * The inheritance mentioned in the documentation is not being utilized yet. I'm still trying to decide exactly how to implement it without adding too much complexity to the library. Right now, the library and test driver assume that fiducials are the parameter sets being used.
    * Writing back to tsdfc files is not implemented yet. The method by which this will be done is still up for discussion
    * There are a lot of warnings that come up on compile, but they are all generated from C++ standard library files and therefore cannot be avoided.

FILES
In addition to the library dependencies, TSDFLIB consists of the following files:

    * container.cc
    * container.h
    * pslist.cc
    * pslist.h
    * fslist.cc
    * fslist.h
    * paramset.cc
    * paramset.h
    * fidset.cc
    * fidset.h
    * giofidset.cc
    * giofidset.h
    * gdbmkeys.cc
    * gdbmkeys.h

BUGS

    * There are several memory leaks in the program that I am in the process of getting rid of. However, this should not affect the program behavior during normal usage. The bug that was causing the program to seg fault has been found and fixed.

To report a bug, send mail to Jennifer Simpson at (simpson@cs.utah.edu)

SEE ALSO
graphicsio documentation.
TSDFLIB Project Plan

AUTHORS
Jennifer Simpson (simpson@cs.utah.edu) and Rob Macleod.

NOTES
This library is still under development. Updates to both the library and this page will be made frequently.


Last updated: 06/25/02 by Jenny Simpson






